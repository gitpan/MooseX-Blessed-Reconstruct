NAME
    MooseX::Blessed::Reconstruct - A Data::Visitor for creating Moose
    objects from blessed placeholders

VERSION
    version 1.00

SYNOPSIS
            use MooseX::Blessed::Reconstruct;


            my $obj = bless( {
                    init_arg_foo => "Blah",
                    arf => "yay",
            }, "Foo" );

            my $proper = MooseX::Blessed::Reconstruct->new->visit($obj);



            # equivalent to:

            my $proper = Foo->meta->new_object(%$obj);

            # but recursive (and works with shared references)

DESCRIPTION
    The purpose of this module is to "fix up" blessed data into a real Moose
    object.

    This is used internally by MooseX::YAML but has no implementation
    details having to do with YAML itself.

METHODS
    See Data::Visitor

    visit_object $object
        Calls "load_class" in Class::MOP on the "ref" of $object.

        If there's a metaclass, calls "visit_object_with_meta", otherwise
        "visit_ref" is used to walk the object brutishly.

        Returns a deep clone of the input structure with all the Moose
        objects reconstructed "properly".

    visit_object_with_meta $obj, $meta
        Uses the metaclass $meta to create a new instance, registers the
        instance with Data::Visitor's cycle tracking, and then inflates it
        using "new_object" in Moose::Meta::Class.

    prepare_args $obj
        Collapses $obj into key value pairs to be used as init args to
        "new_object" in Moose::Meta::Class.

AUTHORS
    *   Yuval Kogman <nothingmuch@woobling.org>

    *   Jonathan Rockway <jrockway@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2008 by Infinity Interactive, Yuval
    Kogman.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

